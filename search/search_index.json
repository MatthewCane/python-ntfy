{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>An easy-to-use ntfy python library.</p> <p>Note</p> <p>The documentation is a work in progress. If you see something missing or incorrect, please feel free to open a pull request.</p>"},{"location":"#quickstart","title":"Quickstart","text":"<p>To get going with some basic functionality, see the quickstart guide.</p>"},{"location":"#examples","title":"Examples","text":"<p>For examples of common use-cases, check out the examples page.</p>"},{"location":"#reference","title":"Reference","text":"<p>For a full API reference, see the reference page.</p>"},{"location":"#links","title":"Links","text":"<ul> <li>Github</li> <li>PyPi</li> </ul>"},{"location":"examples/","title":"Example Usage","text":""},{"location":"examples/#set-up-the-client-with-no-credentials","title":"Set up the client with no credentials","text":"<pre><code>client = NtfyClient(topic=\"Your topic\")\n</code></pre>"},{"location":"examples/#set-up-the-client-with-username-and-password-credentials-passed-to-the-ntfyclient-constructor","title":"Set up the client with username and password credentials passed to the <code>NtfyClient</code> constructor","text":"<pre><code>client = NtfyClient(topic=\"Your topic\", auth=(\"your_username\", \"your_password\"))\n</code></pre>"},{"location":"examples/#set-up-the-client-with-a-bearer-token-passed-to-the-ntfyclient-constructor","title":"Set up the client with a bearer token passed to the <code>NtfyClient</code> constructor","text":"<pre><code>client = NtfyClient(topic=\"Your topic\", auth=\"your_token\")\n</code></pre>"},{"location":"examples/#set-up-the-client-with-username-and-password-credentials-from-environment-variables","title":"Set up the client with username and password credentials from environment variables","text":"<pre><code>environ[\"NTFY_USER\"] = \"your_username\"\nenviron[\"NTFY_PASSWORD\"] = \"your_password\"\nclient = NtfyClient(topic=\"Your topic\")\n</code></pre>"},{"location":"examples/#set-up-the-client-with-a-bearer-token-from-environment-variables","title":"Set up the client with a bearer token from environment variables","text":"<pre><code>environ[\"NTFY_TOKEN\"] = \"your_token\"\nclient = NtfyClient(topic=\"Your topic\")\n</code></pre>"},{"location":"examples/#send-a-basic-message","title":"Send a basic message","text":"<pre><code>client = NtfyClient(topic=\"Your topic\")\n\nclient.send(\"Your message here\")\n</code></pre>"},{"location":"examples/#send-a-markdown-formatted-message","title":"Send a markdown formatted message","text":"<pre><code>client = NtfyClient(topic=\"Your topic\")\n\nmessage = \"\"\"# My Message\n\n- Bullet\n- Points\n\"\"\"\n\nclient.send(message, format_as_markdown=True)\n</code></pre>"},{"location":"examples/#send-a-file-as-an-attachment","title":"Send a file as an attachment","text":"<pre><code>client = NtfyClient(topic=\"Your topic\")\n\nclient.send_file(\"/path/to/your/file.txt\")\n</code></pre>"},{"location":"examples/#send-a-message-with-priority","title":"Send a message with priority","text":"<pre><code>client = NtfyClient(topic=\"Your topic\")\n\nclient.send(\"Your message here\", priority=client.MessagePriority.HIGH)\n</code></pre>"},{"location":"examples/#send-a-message-with-tags","title":"Send a message with tags","text":"<pre><code>client = NtfyClient(topic=\"Your topic\")\n\nclient.send(\"Your message here\", tags=[\"tag1\", \"tag2\"])\n</code></pre>"},{"location":"examples/#send-a-message-with-click-action","title":"Send a message with click action","text":"<pre><code>client = NtfyClient(topic=\"Your topic\")\n\nclient.send(\"Your message here\", actions=[client.ViewAction(label=\"Open Website\", url=\"https://ntfy.sh\"),])\n</code></pre>"},{"location":"quickstart/","title":"Quickstart Guide","text":"<ol> <li>Install using pip with <code>pip3 install python-ntfy</code></li> <li>Import and instantiate the <code>NtfyClient</code>:</li> </ol> <pre><code># Import the ntfy client\nfrom python_ntfy import NtfyClient\n\n# With no credentials\nclient = NtfyClient(topic=\"Your topic\")\n\n# With credentials passed to the `NtfyClient` constructor (takes precedence over environment variables)\nclient = NtfyClient(topic=\"Your topic\", auth=(\"your_username\", \"your_password\")) # Basic auth\nclient = NtfyClient(topic=\"Your topic\", auth=\"your_token\") # Token auth\n\n# Or set credentials from environment variables\nfrom os import environ\nenviron[\"NTFY_USER\"] = \"your_username\"\nenviron[\"NTFY_PASSWORD\"] = \"your_password\"\nenviron[\"NTFY_TOKEN\"] = \"your_token\"\nclient = NtfyClient(topic=\"Your topic\")\n</code></pre> <ol> <li>Send a message:</li> </ol> <pre><code># Send a message\nclient.send(\"Your message here\")\n</code></pre>"},{"location":"reference/","title":"API Reference","text":""},{"location":"reference/#python_ntfy.client.NtfyClient","title":"python_ntfy.client.NtfyClient","text":"<pre><code>NtfyClient(\n    topic: str,\n    server: str = \"https://ntfy.sh\",\n    auth: tuple[str, str] | str | None = None,\n)\n</code></pre> <p>A client for interacting with the ntfy notification service.</p> <p>Initialize the client.</p> <p>Parameters:</p> Name Type Description Default <code>topic</code> <code>str</code> <p>The topic to use for this client.</p> required <code>server</code> <code>str</code> <p>The server base URL (must include protocol, e.g., https://).</p> <code>'https://ntfy.sh'</code> <code>auth</code> <code>tuple[str, str] | str | None</code> <p>Credentials for this client. Takes precedence over environment variables. May be a tuple <code>(user, password)</code> for Basic auth or a token string for Bearer auth.</p> <code>None</code>"},{"location":"reference/#python_ntfy.client.NtfyClient.get_cached_messages","title":"get_cached_messages","text":"<pre><code>get_cached_messages(\n    since: str = \"all\",\n    scheduled: bool = False,\n    timeout_seconds: int = 10,\n) -&gt; list[dict]\n</code></pre> <p>Get cached messages from the server.</p>"},{"location":"reference/#python_ntfy.client.NtfyClient.get_topic","title":"get_topic","text":"<pre><code>get_topic() -&gt; str\n</code></pre> <p>Get the current topic.</p>"},{"location":"reference/#python_ntfy.client.NtfyClient.send","title":"send","text":"<pre><code>send(\n    message: str,\n    title: str | None = None,\n    priority: MessagePriority = _MessagePriority.DEFAULT,\n    tags: list[str] | None = None,\n    actions: list[ViewAction | BroadcastAction | HttpAction]\n    | None = None,\n    schedule: datetime | None = None,\n    format_as_markdown: bool = False,\n    timeout_seconds: int = 5,\n    email: str | None = None,\n) -&gt; dict\n</code></pre> <p>Send a text-based message to the server.</p>"},{"location":"reference/#python_ntfy.client.NtfyClient.send_file","title":"send_file","text":"<pre><code>send_file(\n    file: str | Path,\n    title: str | None = None,\n    priority: MessagePriority = _MessagePriority.DEFAULT,\n    tags: list[str] | None = None,\n    actions: list[ViewAction | BroadcastAction | HttpAction]\n    | None = None,\n    schedule: datetime | None = None,\n    timeout_seconds: int = 30,\n    email: str | None = None,\n) -&gt; dict\n</code></pre> <p>Send a file to the server.</p>"},{"location":"reference/#python_ntfy.client.NtfyClient.set_topic","title":"set_topic","text":"<pre><code>set_topic(topic: str) -&gt; None\n</code></pre> <p>Set a new topic for this client.</p>"},{"location":"reference/#python_ntfy","title":"python_ntfy","text":""},{"location":"reference/#python_ntfy.MessagePriority","title":"MessagePriority","text":"<p>               Bases: <code>Enum</code></p> <p>Ntfy message priority levels.</p> <p>Attributes:</p> Name Type Description <code>MIN</code> <p>The minimum priority.</p> <code>LOW</code> <p>A low priority.</p> <code>DEFAULT</code> <p>The default priority.</p> <code>HIGH</code> <p>A high priority.</p> <code>MAX</code> <p>The maximum priority.</p> <code>URGENT</code> <p>The maximum priority.</p>"},{"location":"reference/#python_ntfy.ViewAction","title":"ViewAction","text":"<pre><code>ViewAction(label: str, url: str, clear: bool = False)\n</code></pre> <p>               Bases: <code>Action</code></p> <p>A view action button.</p> <p>The view action opens a website or app when the action button is tapped.</p> <p>Initialize a ViewAction.</p> <p>Parameters:</p> Name Type Description Default <code>label</code> <code>str</code> <p>Label of the action button in the notification.</p> required <code>url</code> <code>str</code> <p>URL to open when action is tapped.</p> required <code>clear</code> <code>bool</code> <p>Clear notification after action button is tapped.</p> <code>False</code>"},{"location":"reference/#python_ntfy.BroadcastAction","title":"BroadcastAction","text":"<pre><code>BroadcastAction(\n    label: str,\n    intent: str = \"io.heckel.ntfy.USER_ACTION\",\n    extras: dict[str, str] | None = None,\n    clear: bool = False,\n)\n</code></pre> <p>               Bases: <code>Action</code></p> <p>A broadcast action button.</p> <p>The broadcast action sends an Android broadcast intent when the action button is tapped.</p> <p>Initialize a BroadcastAction.</p> <p>Parameters:</p> Name Type Description Default <code>label</code> <code>str</code> <p>Label of the action button in the notification.</p> required <code>intent</code> <code>str</code> <p>Android intent name.</p> <code>'io.heckel.ntfy.USER_ACTION'</code> <code>extras</code> <code>dict[str, str] | None</code> <p>Android intent extras.</p> <code>None</code> <code>clear</code> <code>bool</code> <p>Clear notification after action button is tapped.</p> <code>False</code>"},{"location":"reference/#python_ntfy.HttpAction","title":"HttpAction","text":"<pre><code>HttpAction(\n    label: str,\n    url: str,\n    method: str = \"POST\",\n    headers: dict[str, str] | None = None,\n    body: str | None = None,\n    clear: bool = False,\n)\n</code></pre> <p>               Bases: <code>Action</code></p> <p>An HTTP action button.</p> <p>The http action sends a HTTP request when the action button is tapped.</p> <p>Initialize an HttpAction.</p> <p>Parameters:</p> Name Type Description Default <code>label</code> <code>str</code> <p>Label of the action button in the notification.</p> required <code>url</code> <code>str</code> <p>URL to open when action is tapped.</p> required <code>method</code> <code>str</code> <p>HTTP method to use for request.</p> <code>'POST'</code> <code>headers</code> <code>dict[str, str] | None</code> <p>HTTP headers to send with the request.</p> <code>None</code> <code>body</code> <code>str | None</code> <p>HTTP body to send with the request.</p> <code>None</code> <code>clear</code> <code>bool</code> <p>Clear notification after HTTP request succeeds. If the request fails, the notification is not cleared.</p> <code>False</code>"},{"location":"reference/#python_ntfy.MessageSendError","title":"MessageSendError","text":"<pre><code>MessageSendError(message: str)\n</code></pre> <p>               Bases: <code>Exception</code></p> <p>Exception raised when a message fails to send.</p> <p>Initialize the exception.</p> <p>Parameters:</p> Name Type Description Default <code>message</code> <code>str</code> <p>The message to display.</p> required"}]}